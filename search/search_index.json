{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Rodash is a collection of functions designed to aid everyday game programming in Roblox. It borrows ideas from lodash in JS, some simpler functionality of Penlight and standalone helper scripts in circulation among the Roblox community. Usage local _ = require ( game . ReplicatedStorage . Rodash ) function onlyLocalPlayerHasSpoon () local playersWithSpoon = _ . filter ( game . Players , function ( player ) return _ . some ( player . Backpack , function ( tool ) return _ . endsWith ( tool . Name , Spoon ) end ) end ) return _ . matches ( playersWithSpoon , { game . Players . LocalPlayer }) end Importing If you prefer not to reuse _ , you can also import the library under a different name, or a specific module: local _r = require(game.ReplicatedStorage.Rodash) local Tables = require(game.ReplicatedStorage.Rodash.Tables) Design Principles The Rodash design principles make it quick and easy to use the library to write concise operations, or incrementally simplify existing Roblox code. Functions: Avoid abstractions , working on native lua types to avoid enforcing specific coding styles Only do one thing by avoiding parameter overloading or flags Enforce type safety to avoid silent error propagation Avoid duplication , mimicking existing functionality or aliasing other functions Maintain backwards compatibility with older versions of the library Installation There are currently two ways to install Rodash: Method 1. Model File (Roblox Studio) Download the rbxm model from the Github releases page . Insert the module into Studio and place it in ReplicatedStorage Method 2. Filesystem Clone this repo using git clone git@github.com:CodeKingdomsTeam/rodash.git in a suitable directory Rename the src folder to Robase Use rojo to sync the files into a place Discussion If you have any queries or feedback, please join the discussion on the Studio+ discord server!","title":"Home"},{"location":"#usage","text":"local _ = require ( game . ReplicatedStorage . Rodash ) function onlyLocalPlayerHasSpoon () local playersWithSpoon = _ . filter ( game . Players , function ( player ) return _ . some ( player . Backpack , function ( tool ) return _ . endsWith ( tool . Name , Spoon ) end ) end ) return _ . matches ( playersWithSpoon , { game . Players . LocalPlayer }) end","title":"Usage"},{"location":"#importing","text":"If you prefer not to reuse _ , you can also import the library under a different name, or a specific module: local _r = require(game.ReplicatedStorage.Rodash) local Tables = require(game.ReplicatedStorage.Rodash.Tables)","title":"Importing"},{"location":"#design-principles","text":"The Rodash design principles make it quick and easy to use the library to write concise operations, or incrementally simplify existing Roblox code. Functions: Avoid abstractions , working on native lua types to avoid enforcing specific coding styles Only do one thing by avoiding parameter overloading or flags Enforce type safety to avoid silent error propagation Avoid duplication , mimicking existing functionality or aliasing other functions Maintain backwards compatibility with older versions of the library","title":"Design Principles"},{"location":"#installation","text":"There are currently two ways to install Rodash:","title":"Installation"},{"location":"#method-1-model-file-roblox-studio","text":"Download the rbxm model from the Github releases page . Insert the module into Studio and place it in ReplicatedStorage","title":"Method 1. Model File (Roblox Studio)"},{"location":"#method-2-filesystem","text":"Clone this repo using git clone git@github.com:CodeKingdomsTeam/rodash.git in a suitable directory Rename the src folder to Robase Use rojo to sync the files into a place","title":"Method 2. Filesystem"},{"location":"#discussion","text":"If you have any queries or feedback, please join the discussion on the Studio+ discord server!","title":"Discussion"},{"location":"api/Async/","text":"Async Functions all function _ . all ( objects ) -- string Given an array of objects, this function returns a promise which resolves once all of the array elements have resolved, or rejects if any of the array elements reject. Any objects in the array which aren t promises are considered resolved immediately. The promise resolves to an array mapping the input to resolved elements. Parameters objects - string Returns string delay function _ . delay ( delayInSeconds ) -- string Returns a promise which resolves after the given delayInSeconds. Parameters delayInSeconds - string Returns string retryWithBackoff function _ . retryWithBackoff ( getPromise , backoffOptions ) -- string Try running a function which returns a promise and retry if the function throws and error or the promise rejects. The retry behaviour can be adapted using backoffOptions, which can customize the maximum number of retries and the backoff timing of the form [0, x^attemptNumber] + y where x is an exponent that produces a random exponential delay and y is a constant delay. maxTries - how many tries (including the first one) the function should be called retryExponentInSeconds - customize the backoff exponent retryConstantInSeconds - customize the backoff constant randomStream - use a Roblox \"Random\" instance to control the backoff shouldRetry(response) - called if maxTries 1 to determine whether a retry should occur onRetry(waitTime, errorMessage) - a hook for when a retry is triggered, with the delay before retry and error message which caused the failure onDone(response, durationMs) - a hook for when the promise resolves onFail(errorMessage) - a hook for when the promise has failed and no more retries are allowed Parameters getPromise - string backoffOptions - string Returns string wrapFn function _ . wrapFn ( fn ) -- string Returns a promise for a function which may yield. wrapFn calls the the function in a coroutine and resolves with the output of the function after any asynchronous actions, and rejects if the function throws an error. Parameters fn - string Returns string","title":"Async"},{"location":"api/Async/#async","text":"","title":"Async"},{"location":"api/Async/#functions","text":"","title":"Functions"},{"location":"api/Async/#all","text":"function _ . all ( objects ) -- string Given an array of objects, this function returns a promise which resolves once all of the array elements have resolved, or rejects if any of the array elements reject. Any objects in the array which aren t promises are considered resolved immediately. The promise resolves to an array mapping the input to resolved elements. Parameters objects - string Returns string","title":"all"},{"location":"api/Async/#delay","text":"function _ . delay ( delayInSeconds ) -- string Returns a promise which resolves after the given delayInSeconds. Parameters delayInSeconds - string Returns string","title":"delay"},{"location":"api/Async/#retrywithbackoff","text":"function _ . retryWithBackoff ( getPromise , backoffOptions ) -- string Try running a function which returns a promise and retry if the function throws and error or the promise rejects. The retry behaviour can be adapted using backoffOptions, which can customize the maximum number of retries and the backoff timing of the form [0, x^attemptNumber] + y where x is an exponent that produces a random exponential delay and y is a constant delay. maxTries - how many tries (including the first one) the function should be called retryExponentInSeconds - customize the backoff exponent retryConstantInSeconds - customize the backoff constant randomStream - use a Roblox \"Random\" instance to control the backoff shouldRetry(response) - called if maxTries 1 to determine whether a retry should occur onRetry(waitTime, errorMessage) - a hook for when a retry is triggered, with the delay before retry and error message which caused the failure onDone(response, durationMs) - a hook for when the promise resolves onFail(errorMessage) - a hook for when the promise has failed and no more retries are allowed Parameters getPromise - string backoffOptions - string Returns string","title":"retryWithBackoff"},{"location":"api/Async/#wrapfn","text":"function _ . wrapFn ( fn ) -- string Returns a promise for a function which may yield. wrapFn calls the the function in a coroutine and resolves with the output of the function after any asynchronous actions, and rejects if the function throws an error. Parameters fn - string Returns string","title":"wrapFn"},{"location":"api/Classes/","text":"Classes Functions applySwitchStrategyForEnum function _ . applySwitchStrategyForEnum ( enum , enumValue , strategies , ) -- string Parameters enum - string enumValue - string strategies - string undefined - string Returns string extend function _ . extend ( name , subConstructor ) -- string Parameters name - string subConstructor - string Returns string extendWithInterface function _ . extendWithInterface ( name , interface ) -- string Parameters name - string interface - string Returns string isA function _ . isA ( instance , classOrEnum ) -- string Parameters instance - string classOrEnum - string Returns string isInstance function _ . isInstance ( value ) -- string Parameters value - string Returns string makeClass function _ . makeClass ( name , constructor ) -- string Parameters name - string constructor - string Returns string makeClassWithInterface function _ . makeClassWithInterface ( name , interface ) -- string Parameters name - string interface - string Returns string makeEnum function _ . makeEnum ( keys ) -- string Parameters keys - string Returns string makeFinal function _ . makeFinal ( object ) -- string Parameters object - string Returns string makeSymbol function _ . makeSymbol ( name ) -- string Parameters name - string Returns string new function _ . new () -- string Parameters undefined - string Returns string toString function _ . toString () -- string Returns string","title":"Classes"},{"location":"api/Classes/#classes","text":"","title":"Classes"},{"location":"api/Classes/#functions","text":"","title":"Functions"},{"location":"api/Classes/#applyswitchstrategyforenum","text":"function _ . applySwitchStrategyForEnum ( enum , enumValue , strategies , ) -- string Parameters enum - string enumValue - string strategies - string undefined - string Returns string","title":"applySwitchStrategyForEnum"},{"location":"api/Classes/#extend","text":"function _ . extend ( name , subConstructor ) -- string Parameters name - string subConstructor - string Returns string","title":"extend"},{"location":"api/Classes/#extendwithinterface","text":"function _ . extendWithInterface ( name , interface ) -- string Parameters name - string interface - string Returns string","title":"extendWithInterface"},{"location":"api/Classes/#isa","text":"function _ . isA ( instance , classOrEnum ) -- string Parameters instance - string classOrEnum - string Returns string","title":"isA"},{"location":"api/Classes/#isinstance","text":"function _ . isInstance ( value ) -- string Parameters value - string Returns string","title":"isInstance"},{"location":"api/Classes/#makeclass","text":"function _ . makeClass ( name , constructor ) -- string Parameters name - string constructor - string Returns string","title":"makeClass"},{"location":"api/Classes/#makeclasswithinterface","text":"function _ . makeClassWithInterface ( name , interface ) -- string Parameters name - string interface - string Returns string","title":"makeClassWithInterface"},{"location":"api/Classes/#makeenum","text":"function _ . makeEnum ( keys ) -- string Parameters keys - string Returns string","title":"makeEnum"},{"location":"api/Classes/#makefinal","text":"function _ . makeFinal ( object ) -- string Parameters object - string Returns string","title":"makeFinal"},{"location":"api/Classes/#makesymbol","text":"function _ . makeSymbol ( name ) -- string Parameters name - string Returns string","title":"makeSymbol"},{"location":"api/Classes/#new","text":"function _ . new () -- string Parameters undefined - string Returns string","title":"new"},{"location":"api/Classes/#tostring","text":"function _ . toString () -- string Returns string","title":"toString"},{"location":"api/Functions/","text":"Functions Functions compose function _ . compose () -- string Parameters undefined - string Returns string debounce function _ . debounce ( fn , secondsDelay ) -- string Creates a debounced function that delays invoking fn until after secondsDelay seconds have elapsed since the last time the debounced function was invoked. Parameters fn - string secondsDelay - string Returns string defaultSerializeArgs function _ . defaultSerializeArgs ( fnArgs ) -- string Parameters fnArgs - string Returns string isCallable function _ . isCallable ( thing ) -- string Parameters thing - string Returns string memoize function _ . memoize ( fn , serializeArgs ) -- string Cache results of a function such that subsequent calls return the cached result rather than call the function again. By default, a cached result is stored for each separate combination of serialized input args. Optionally memoize takes a serializeArgs function which should return a key that the result should be cached with for a given call signature. Return nil to avoid caching the result. Parameters fn - string serializeArgs - string Returns string once function _ . once ( fn , default ) -- string Parameters fn - string default - string Returns string returnsArgs function _ . returnsArgs () -- string Parameters undefined - string Returns string returnsNil function _ . returnsNil () -- string Returns string setInterval function _ . setInterval ( fn , secondsDelay ) -- string Parameters fn - string secondsDelay - string Returns string setTimeout function _ . setTimeout ( fn , secondsDelay ) -- string Parameters fn - string secondsDelay - string Returns string throttle function _ . throttle ( fn , secondsCooldown ) -- string Creates a throttle function that drops any repeat calls within a cooldown period and instead returns the result of the last call Parameters fn - string secondsCooldown - string Returns string","title":"Functions"},{"location":"api/Functions/#functions","text":"","title":"Functions"},{"location":"api/Functions/#functions_1","text":"","title":"Functions"},{"location":"api/Functions/#compose","text":"function _ . compose () -- string Parameters undefined - string Returns string","title":"compose"},{"location":"api/Functions/#debounce","text":"function _ . debounce ( fn , secondsDelay ) -- string Creates a debounced function that delays invoking fn until after secondsDelay seconds have elapsed since the last time the debounced function was invoked. Parameters fn - string secondsDelay - string Returns string","title":"debounce"},{"location":"api/Functions/#defaultserializeargs","text":"function _ . defaultSerializeArgs ( fnArgs ) -- string Parameters fnArgs - string Returns string","title":"defaultSerializeArgs"},{"location":"api/Functions/#iscallable","text":"function _ . isCallable ( thing ) -- string Parameters thing - string Returns string","title":"isCallable"},{"location":"api/Functions/#memoize","text":"function _ . memoize ( fn , serializeArgs ) -- string Cache results of a function such that subsequent calls return the cached result rather than call the function again. By default, a cached result is stored for each separate combination of serialized input args. Optionally memoize takes a serializeArgs function which should return a key that the result should be cached with for a given call signature. Return nil to avoid caching the result. Parameters fn - string serializeArgs - string Returns string","title":"memoize"},{"location":"api/Functions/#once","text":"function _ . once ( fn , default ) -- string Parameters fn - string default - string Returns string","title":"once"},{"location":"api/Functions/#returnsargs","text":"function _ . returnsArgs () -- string Parameters undefined - string Returns string","title":"returnsArgs"},{"location":"api/Functions/#returnsnil","text":"function _ . returnsNil () -- string Returns string","title":"returnsNil"},{"location":"api/Functions/#setinterval","text":"function _ . setInterval ( fn , secondsDelay ) -- string Parameters fn - string secondsDelay - string Returns string","title":"setInterval"},{"location":"api/Functions/#settimeout","text":"function _ . setTimeout ( fn , secondsDelay ) -- string Parameters fn - string secondsDelay - string Returns string","title":"setTimeout"},{"location":"api/Functions/#throttle","text":"function _ . throttle ( fn , secondsCooldown ) -- string Creates a throttle function that drops any repeat calls within a cooldown period and instead returns the result of the last call Parameters fn - string secondsCooldown - string Returns string","title":"throttle"},{"location":"api/Strings/","text":"Strings Useful functions to manipulate strings, based on similar implementations in other standard libraries. Functions Chainable camelCase function _ . camelCase ( str ) -- string Convert str to camel-case. Parameters str - string Returns string Examples _ . camelCase ( Pepperoni Pizza ) -- pepperoniPizza _ . camelCase ( --pepperoni-pizza-- ) -- pepperoniPizza _ . camelCase ( __PEPPERONI_PIZZA ) -- pepperoniPizza Chainable capitalize function _ . capitalize ( str ) -- string Capitalize the first letter of str . Parameters str - string Returns string Examples _ . capitalize ( hello mould ) -- Hello mould Chainable endsWith function _ . endsWith ( str , ending ) -- string Checks if str ends with the string ending . Parameters str - string ending - string Returns string Examples _ . endsWith ( Fun Roblox Games , Games ) -- true _ . endsWith ( Bad Roblox Memes , Games ) -- false Chainable escape function _ . escape ( str ) -- string Converts the characters \"' in str to their corresponding HTML entities. Parameters str - string Returns string Examples _ . escape ( a Fish Chips /a ) -- lt;a gt;Fish amp; Chips lt;/a gt; Chainable kebabCase function _ . kebabCase ( str ) -- string Convert str to kebab-case, making all letters lowercase. Parameters str - string Returns string Examples _ . kebabCase ( strongStilton ) -- strong-stilton _ . kebabCase ( Strong Stilton ) -- strong-stilton _ . kebabCase ( __STRONG_STILTON__ ) -- strong-stilton Usage Chain with :upper() if you need an upper kebab-case string. Chainable leftPad function _ . leftPad ( str , length , prefix ) -- string Makes a string of length from str by repeating characters from prefix at the start of the string. Parameters str - string length - string prefix - string Returns string Examples _ . leftPad ( toast , 6 ) -- toast _ . leftPad ( 2 , 2 , 0 ) -- 02 _ . leftPad ( toast , 10 , :) ) -- :):):toast Chainable rightPad function _ . rightPad ( str , length , suffix ) -- string Makes a string of length from str by repeating characters from suffix at the end of the string. Parameters str - string length - string suffix - string Returns string Examples _ . leftPad ( toast , 6 ) -- toast _ . leftPad ( 2 , 2 , ! ) -- 2! _ . leftPad ( toast , 10 , :) ) -- toast:):): Chainable snakeCase function _ . snakeCase ( str ) -- string Convert str to kebab-case, making all letters uppercase. Parameters str - string Returns string Examples _ . snakeCase ( sweetChickenCurry ) -- SWEET_CHICKEN_CURRY _ . snakeCase ( Sweet Chicken Curry ) -- SWEET_CHICKEN__CURRY _ . snakeCase ( --sweet-chicken--curry-- ) -- SWEET_CHICKEN__CURRY Usage Chain with :lower() if you need a lower snake-case string. Chainable splitByPattern function _ . splitByPattern ( str , delimiter ) -- string Splits str into parts based on a pattern delimiter and returns a table of the parts. Parameters str - string delimiter - string Returns string Examples _ . split ( rice ) -- { r , i , c , e } _ . split ( one, two,, flour , ,%s* ) -- { one , two , , flour } Usage This method is useful only when you need a pattern for delimiter. Use the Roblox native string.split if you a splitting on a simple string. Chainable startsWith function _ . startsWith ( str , start ) -- string Checks if str starts with the string start . Parameters str - string start - string Returns string Examples _ . startsWith ( Fun Roblox Games , Roblox ) -- true _ . startsWith ( Minecraft Games , Roblox ) -- false Chainable titleCase function _ . titleCase ( str ) -- string Convert str to title-case, where the first letter of each word is capitalized. Parameters str - string Returns string Examples _ . titleCase ( jello world ) -- Jello World _ . titleCase ( yellow-jello with_sprinkles ) -- Yellow-jello With_sprinkles _ . titleCase ( yellow jello s don\u2019t mellow ) -- Yellow Jello s Dont\u2019t Mellow Usage Dashes, underscores and apostraphes don't break words. Chainable trim function _ . trim ( str ) -- string Removes any spaces from the start and end of str . Parameters str - string Returns string Examples _ . trim ( roast veg ) -- roast veg Chainable unescape function _ . unescape ( str ) -- string The inverse of _.escape . Converts any escaped HTML entities in str to their corresponding characters. Parameters str - string Returns string Examples _ . unescape ( #34;Smashed quot; apos;Avocado #39; ) -- [[ Smashed Avocado ]]","title":"Strings"},{"location":"api/Strings/#strings","text":"Useful functions to manipulate strings, based on similar implementations in other standard libraries.","title":"Strings"},{"location":"api/Strings/#functions","text":"Chainable","title":"Functions"},{"location":"api/Strings/#camelcase","text":"function _ . camelCase ( str ) -- string Convert str to camel-case. Parameters str - string Returns string Examples _ . camelCase ( Pepperoni Pizza ) -- pepperoniPizza _ . camelCase ( --pepperoni-pizza-- ) -- pepperoniPizza _ . camelCase ( __PEPPERONI_PIZZA ) -- pepperoniPizza Chainable","title":"camelCase"},{"location":"api/Strings/#capitalize","text":"function _ . capitalize ( str ) -- string Capitalize the first letter of str . Parameters str - string Returns string Examples _ . capitalize ( hello mould ) -- Hello mould Chainable","title":"capitalize"},{"location":"api/Strings/#endswith","text":"function _ . endsWith ( str , ending ) -- string Checks if str ends with the string ending . Parameters str - string ending - string Returns string Examples _ . endsWith ( Fun Roblox Games , Games ) -- true _ . endsWith ( Bad Roblox Memes , Games ) -- false Chainable","title":"endsWith"},{"location":"api/Strings/#escape","text":"function _ . escape ( str ) -- string Converts the characters \"' in str to their corresponding HTML entities. Parameters str - string Returns string Examples _ . escape ( a Fish Chips /a ) -- lt;a gt;Fish amp; Chips lt;/a gt; Chainable","title":"escape"},{"location":"api/Strings/#kebabcase","text":"function _ . kebabCase ( str ) -- string Convert str to kebab-case, making all letters lowercase. Parameters str - string Returns string Examples _ . kebabCase ( strongStilton ) -- strong-stilton _ . kebabCase ( Strong Stilton ) -- strong-stilton _ . kebabCase ( __STRONG_STILTON__ ) -- strong-stilton Usage Chain with :upper() if you need an upper kebab-case string. Chainable","title":"kebabCase"},{"location":"api/Strings/#leftpad","text":"function _ . leftPad ( str , length , prefix ) -- string Makes a string of length from str by repeating characters from prefix at the start of the string. Parameters str - string length - string prefix - string Returns string Examples _ . leftPad ( toast , 6 ) -- toast _ . leftPad ( 2 , 2 , 0 ) -- 02 _ . leftPad ( toast , 10 , :) ) -- :):):toast Chainable","title":"leftPad"},{"location":"api/Strings/#rightpad","text":"function _ . rightPad ( str , length , suffix ) -- string Makes a string of length from str by repeating characters from suffix at the end of the string. Parameters str - string length - string suffix - string Returns string Examples _ . leftPad ( toast , 6 ) -- toast _ . leftPad ( 2 , 2 , ! ) -- 2! _ . leftPad ( toast , 10 , :) ) -- toast:):): Chainable","title":"rightPad"},{"location":"api/Strings/#snakecase","text":"function _ . snakeCase ( str ) -- string Convert str to kebab-case, making all letters uppercase. Parameters str - string Returns string Examples _ . snakeCase ( sweetChickenCurry ) -- SWEET_CHICKEN_CURRY _ . snakeCase ( Sweet Chicken Curry ) -- SWEET_CHICKEN__CURRY _ . snakeCase ( --sweet-chicken--curry-- ) -- SWEET_CHICKEN__CURRY Usage Chain with :lower() if you need a lower snake-case string. Chainable","title":"snakeCase"},{"location":"api/Strings/#splitbypattern","text":"function _ . splitByPattern ( str , delimiter ) -- string Splits str into parts based on a pattern delimiter and returns a table of the parts. Parameters str - string delimiter - string Returns string Examples _ . split ( rice ) -- { r , i , c , e } _ . split ( one, two,, flour , ,%s* ) -- { one , two , , flour } Usage This method is useful only when you need a pattern for delimiter. Use the Roblox native string.split if you a splitting on a simple string. Chainable","title":"splitByPattern"},{"location":"api/Strings/#startswith","text":"function _ . startsWith ( str , start ) -- string Checks if str starts with the string start . Parameters str - string start - string Returns string Examples _ . startsWith ( Fun Roblox Games , Roblox ) -- true _ . startsWith ( Minecraft Games , Roblox ) -- false Chainable","title":"startsWith"},{"location":"api/Strings/#titlecase","text":"function _ . titleCase ( str ) -- string Convert str to title-case, where the first letter of each word is capitalized. Parameters str - string Returns string Examples _ . titleCase ( jello world ) -- Jello World _ . titleCase ( yellow-jello with_sprinkles ) -- Yellow-jello With_sprinkles _ . titleCase ( yellow jello s don\u2019t mellow ) -- Yellow Jello s Dont\u2019t Mellow Usage Dashes, underscores and apostraphes don't break words. Chainable","title":"titleCase"},{"location":"api/Strings/#trim","text":"function _ . trim ( str ) -- string Removes any spaces from the start and end of str . Parameters str - string Returns string Examples _ . trim ( roast veg ) -- roast veg Chainable","title":"trim"},{"location":"api/Strings/#unescape","text":"function _ . unescape ( str ) -- string The inverse of _.escape . Converts any escaped HTML entities in str to their corresponding characters. Parameters str - string Returns string Examples _ . unescape ( #34;Smashed quot; apos;Avocado #39; ) -- [[ Smashed Avocado ]]","title":"unescape"},{"location":"api/Tables/","text":"Tables Tables is a library to handle tables. There are some reasons for this: Great docs Some custom Examples For example: There are two ways to do this Right? Functions all function _ . all ( source , handler ) -- string Wow Parameters source - string handler - string Returns string any function _ . any ( source , handler ) -- string Parameters source - string handler - string Returns string append function _ . append () -- string Parameters undefined - string Returns string assign function _ . assign ( target , ) -- string Parameters target - string undefined - string Returns string clone function _ . clone ( tbl ) -- string Parameters tbl - string Returns string compact function _ . compact ( source ) -- string Parameters source - string Returns string deepEquals function _ . deepEquals ( a , b ) -- string Parameters a - string b - string Returns string defaults function _ . defaults ( target , ) -- string Parameters target - string undefined - string Returns string entries function _ . entries ( source ) -- string Parameters source - string Returns string filter function _ . filter ( source , handler ) -- string Parameters source - string handler - string Returns string filterKeys function _ . filterKeys ( source , handler ) -- string Parameters source - string handler - string Returns string filterKeysMap function _ . filterKeysMap ( source , handler ) -- string Parameters source - string handler - string Returns string find function _ . find ( source , handler ) -- string Parameters source - string handler - string Returns string findKey function _ . findKey ( source , handler ) -- string Parameters source - string handler - string Returns string flatMap function _ . flatMap ( source , handler ) -- string Parameters source - string handler - string Returns string getLength function _ . getLength ( table ) -- string Parameters table - string Returns string groupBy function _ . groupBy ( source , handler ) -- string Summary ends with a period. This extracts the shortest common substring from the strings s1 and s2 function M.common_substring(s1,s2) several lines. Parameters source - string handler - string Returns string includes function _ . includes ( source , item ) -- string Parameters source - string item - string Returns string insertMany function _ . insertMany ( target , items ) -- string Parameters target - string items - string Returns string invert function _ . invert ( source ) -- string Parameters source - string Returns string isSubset function _ . isSubset ( a , b ) -- string Parameters a - string b - string Returns string keyBy function _ . keyBy ( source , handler ) -- string Parameters source - string handler - string Returns string keyOf function _ . keyOf ( source , value ) -- string Parameters source - string value - string Returns string keys function _ . keys ( source ) -- string Parameters source - string Returns string map function _ . map ( source , handler ) -- string Parameters source - string handler - string Returns string mapKeys function _ . mapKeys ( source , handler ) -- string Parameters source - string handler - string Returns string merge function _ . merge ( target , ) -- string Parameters target - string undefined - string Returns string omitBy function _ . omitBy ( source , handler ) -- string Parameters source - string handler - string Returns string reduce function _ . reduce ( source , handler , init ) -- string Parameters source - string handler - string init - string Returns string reverse function _ . reverse ( source ) -- string Summary ends with a period. Some description, can be over several lines. local test = {} Parameters source - string Returns string serialize function _ . serialize ( input , serializer ) -- string Parameters input - string serializer - string Returns string shallowEqual function _ . shallowEqual ( left , right ) -- string Based on https://developmentarc.gitbooks.io/react-indepth/content/life_cycle/update/using_should_component_update.html Parameters left - string right - string Returns string shuffle function _ . shuffle ( source ) -- string Parameters source - string Returns string slice function _ . slice ( source , first , last , step ) -- string Parameters source - string first - string last - string step - string Returns string sort function _ . sort ( input , comparator ) -- string Parameters input - string comparator - string Returns string values function _ . values ( source ) -- string Parameters source - string Returns string without function _ . without ( source , element ) -- string Parameters source - string element - string Returns string","title":"Tables"},{"location":"api/Tables/#tables","text":"Tables is a library to handle tables. There are some reasons for this: Great docs Some custom","title":"Tables"},{"location":"api/Tables/#examples","text":"For example: There are two ways to do this Right?","title":"Examples"},{"location":"api/Tables/#functions","text":"","title":"Functions"},{"location":"api/Tables/#all","text":"function _ . all ( source , handler ) -- string Wow Parameters source - string handler - string Returns string","title":"all"},{"location":"api/Tables/#any","text":"function _ . any ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"any"},{"location":"api/Tables/#append","text":"function _ . append () -- string Parameters undefined - string Returns string","title":"append"},{"location":"api/Tables/#assign","text":"function _ . assign ( target , ) -- string Parameters target - string undefined - string Returns string","title":"assign"},{"location":"api/Tables/#clone","text":"function _ . clone ( tbl ) -- string Parameters tbl - string Returns string","title":"clone"},{"location":"api/Tables/#compact","text":"function _ . compact ( source ) -- string Parameters source - string Returns string","title":"compact"},{"location":"api/Tables/#deepequals","text":"function _ . deepEquals ( a , b ) -- string Parameters a - string b - string Returns string","title":"deepEquals"},{"location":"api/Tables/#defaults","text":"function _ . defaults ( target , ) -- string Parameters target - string undefined - string Returns string","title":"defaults"},{"location":"api/Tables/#entries","text":"function _ . entries ( source ) -- string Parameters source - string Returns string","title":"entries"},{"location":"api/Tables/#filter","text":"function _ . filter ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"filter"},{"location":"api/Tables/#filterkeys","text":"function _ . filterKeys ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"filterKeys"},{"location":"api/Tables/#filterkeysmap","text":"function _ . filterKeysMap ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"filterKeysMap"},{"location":"api/Tables/#find","text":"function _ . find ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"find"},{"location":"api/Tables/#findkey","text":"function _ . findKey ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"findKey"},{"location":"api/Tables/#flatmap","text":"function _ . flatMap ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"flatMap"},{"location":"api/Tables/#getlength","text":"function _ . getLength ( table ) -- string Parameters table - string Returns string","title":"getLength"},{"location":"api/Tables/#groupby","text":"function _ . groupBy ( source , handler ) -- string Summary ends with a period. This extracts the shortest common substring from the strings s1 and s2 function M.common_substring(s1,s2) several lines. Parameters source - string handler - string Returns string","title":"groupBy"},{"location":"api/Tables/#includes","text":"function _ . includes ( source , item ) -- string Parameters source - string item - string Returns string","title":"includes"},{"location":"api/Tables/#insertmany","text":"function _ . insertMany ( target , items ) -- string Parameters target - string items - string Returns string","title":"insertMany"},{"location":"api/Tables/#invert","text":"function _ . invert ( source ) -- string Parameters source - string Returns string","title":"invert"},{"location":"api/Tables/#issubset","text":"function _ . isSubset ( a , b ) -- string Parameters a - string b - string Returns string","title":"isSubset"},{"location":"api/Tables/#keyby","text":"function _ . keyBy ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"keyBy"},{"location":"api/Tables/#keyof","text":"function _ . keyOf ( source , value ) -- string Parameters source - string value - string Returns string","title":"keyOf"},{"location":"api/Tables/#keys","text":"function _ . keys ( source ) -- string Parameters source - string Returns string","title":"keys"},{"location":"api/Tables/#map","text":"function _ . map ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"map"},{"location":"api/Tables/#mapkeys","text":"function _ . mapKeys ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"mapKeys"},{"location":"api/Tables/#merge","text":"function _ . merge ( target , ) -- string Parameters target - string undefined - string Returns string","title":"merge"},{"location":"api/Tables/#omitby","text":"function _ . omitBy ( source , handler ) -- string Parameters source - string handler - string Returns string","title":"omitBy"},{"location":"api/Tables/#reduce","text":"function _ . reduce ( source , handler , init ) -- string Parameters source - string handler - string init - string Returns string","title":"reduce"},{"location":"api/Tables/#reverse","text":"function _ . reverse ( source ) -- string Summary ends with a period. Some description, can be over several lines. local test = {} Parameters source - string Returns string","title":"reverse"},{"location":"api/Tables/#serialize","text":"function _ . serialize ( input , serializer ) -- string Parameters input - string serializer - string Returns string","title":"serialize"},{"location":"api/Tables/#shallowequal","text":"function _ . shallowEqual ( left , right ) -- string Based on https://developmentarc.gitbooks.io/react-indepth/content/life_cycle/update/using_should_component_update.html Parameters left - string right - string Returns string","title":"shallowEqual"},{"location":"api/Tables/#shuffle","text":"function _ . shuffle ( source ) -- string Parameters source - string Returns string","title":"shuffle"},{"location":"api/Tables/#slice","text":"function _ . slice ( source , first , last , step ) -- string Parameters source - string first - string last - string step - string Returns string","title":"slice"},{"location":"api/Tables/#sort","text":"function _ . sort ( input , comparator ) -- string Parameters input - string comparator - string Returns string","title":"sort"},{"location":"api/Tables/#values","text":"function _ . values ( source ) -- string Parameters source - string Returns string","title":"values"},{"location":"api/Tables/#without","text":"function _ . without ( source , element ) -- string Parameters source - string element - string Returns string","title":"without"},{"location":"guide/arrays/","text":"Handling arrays How to Arrays are great!","title":"Arrays"},{"location":"guide/arrays/#handling-arrays","text":"","title":"Handling arrays"},{"location":"guide/arrays/#how-to","text":"Arrays are great!","title":"How to"}]}